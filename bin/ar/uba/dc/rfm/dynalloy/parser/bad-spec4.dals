module spec0

abstract sig BooleanValue {}
one sig FalseValue extends BooleanValue {}
one sig TrueValue extends BooleanValue {}

pred TruePred[] {}

pred SwapPost[a, b, a', b'] = { a' = b && b' = a }

act Swap[a, b : univ] {
  pre { TruePred[] }
  post { SwapPost[a, b, a', b'] }
}

pred NoChange[a, b, a', b'] = { a' = a && b' = b }

/*comment*/ assert SwapSwapInvariant ( {
   assertCorrectness[a, b: univ] {
       pre = { TruePred[] }
       program = {
       		Swap[a,b];Swap[a,b]
       }
       post = { NoChange[a,b,a',b'] }
   }
}