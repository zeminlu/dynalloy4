module mod

sig A {}

one sig A1 extends A {}
one sig A2 extends A {}

pred equ[l,r: univ] {
 l=r;
}

pred TruePred[] {}

action myA1[a: A] {
  pre  {TruePred[]}
  post {equ[a',A1]}
}

action myA2[a: A] {
  pre  {TruePred[]}
  post {equ[a',A2]}
}

program myProgram[a:A] {
  (myA1[a])*
}
